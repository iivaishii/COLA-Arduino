/*
  The circuit:
   SD card attached to SPI bus as follows:
 ** MOSI - pin 51
 ** MISO - pin 50
 ** CLK - pin 52
 ** CS - pin 53 (for MKRZero SD: SDCARD_SS_PIN)

*/

#include <SPI.h>
#include <SD.h>
#include <Wire.h>
#include "GPS.h"
#include "IMU.h"

File myFile;
int x = 0;

void Data_Logger_setup() 
{
  // Open serial communications and wait for port to open:
  Serial.begin(115200);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }

  Serial.print("Initializing SD card...");

  if (!SD.begin(53)) {
    Serial.println("initialization failed!");
    while (1);
  }
  Serial.println("initialization done.");
  //myFile = SD.open("GPS_Test.txt", FILE_WRITE);
  myFile = SD.open("IMU_Test.txt", FILE_WRITE);
}

void IMU_write_to_file() 
{
   // if the file opened okay, write to it:
  if (myFile) {
   // long alt = gps_altitude();
   // long timeStamp = time_stamp();
   // Serial.print(String(timeStamp) + " ms: ");
   // Serial.print("Altitude: ");
   // Serial.println(String(alt));
   // myFile.print(String(timeStamp) + " ms: ");
   // myFile.print("Altitude: ");
   // myFile.println(String(alt) + " mm");

    long roll = imu_roll();
    long pitch = imu_pitch();
    long timeStamp = time_stamp();
    Serial.print(String(timeStamp) + " ms: ");
    myFile.print(String(timeStamp) + " ms: ");
    Serial.print("Roll Angle: ");
    myFile.print("Roll Angle: ");
    Serial.println(roll);
    myFile.println(String(roll) + " rad");
    
    Serial.print(String(timeStamp) + " ms: ");
    myFile.print(String(timeStamp) + " ms: ");
    Serial.print("Pitch Angle: ");
    myFile.print("Pitch Angle: ");
    Serial.println(pitch);
    myFile.println(String(pitch) + " rad");

  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening test.txt");
  }

  if(x == 10)
  {
     myFile.close();
    Serial.println("done.");
  }
  else
  {
    x += 1;
    Serial.print("x = ");
    Serial.println(x);
    delay(2500);
  }
}
